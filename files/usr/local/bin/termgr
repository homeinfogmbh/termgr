#! /usr/bin/env python3
"""Command line tool to administer HOMEINFO terminals

Usage:
    termgr add <class_id> <cid> <street> <house_number> <zip_code> \
<city> [--state=<state_iso>] [--tid=<tid>]

Options:
    -h --help     Show this screen.
    --version     Show version.
"""

from docopt import docopt
from homeinfo.crm.address import Address, State
from homeinfo.terminals.db import Terminal, Class, Domain

options = docopt(__doc__)

if options['add']:
    class_id_str = options['<class_id>']
    cid_str = options['<cid>']
    tid_str = options['--tid']
    street = options['<street>']
    house_number = options['<house_number>']
    zip_code = options['<zip_code>']
    city = options['<city>']
    state_iso = options['--state']

    class_id = int(class_id_str)
    cid = int(cid_str)
    if tid_str is not None:
        desired_tid = int(tid_str)
    else:
        desired_tid = None
    tid = Terminal.gen_tid(cid, desired=desired_tid)

    class_ = Class.get(Class.id == class_id)
    domain = Domain.get(Domain.id == 1)  # TODO: Make this dynamic
    if state_iso:
        state = State.get(State._iso == state_iso)
    else:
        state = None

    addr = (street, house_number, zip_code)
    address = Address.add(city, addr=addr, state=state)

    terminal = Terminal()
    terminal.customer = cid
    terminal.tid = tid
    terminal.cls = class_
    terminal.domain = domain
    terminal.ipv4addr = Terminal.gen_ipv4addr()
    terminal.virtual_display = None
    terminal.location = address
    terminal.deleted = False
    if terminal.gen_vpn_keys():
        print('OpenVPN keys generated')
    else:
        print('OpenVPN keys already present')
    terminal.save()
