#! /usr/bin/env python3
"""OpenVPN configuration package client."""

from argparse import ArgumentParser
from getpass import getpass
from logging import DEBUG, INFO, basicConfig, getLogger
from pathlib import Path
from sys import exit, stdout    # pylint: disable=W0622

from requests import session


LOGGER = getLogger('sysvpn')
LOG_FORMAT = '[%(levelname)s] %(name)s: %(message)s'
HIS_LOGIN_URL = 'https://his.homeinfo.de/session'
TERMGR_VPN_URL = 'https://termgr.homeinfo.de/setup/openvpn'


def get_args():
    """Parses the command line arguments."""

    parser = ArgumentParser(description='OpenVPN configuration retrieval.')
    parser.add_argument('-u', '--user', help='HIS user name')
    parser.add_argument('-w', '--windows', action='store_true',
                        help='package for MS Windows systems')
    parser.add_argument('-o', '-f', '--file', type=Path, help='output file')
    parser.add_argument('-d', '--debug', action='store_true',
                        help='enable debug mode')
    parser.add_argument('system', type=int, help='the system ID')
    return parser.parse_args()


def retrieve_data(login_data, vpn_data, path):
    """Retrieves OpenVPN data for the respective system."""

    with session() as sess:
        response = sess.post(HIS_LOGIN_URL, json=login_data)

        if response.status_code != 200:
            LOGGER.error('Error during login.')
            LOGGER.debug(response.content)
            exit(2)

        response = sess.post(TERMGR_VPN_URL, json=vpn_data)

        if response.status_code != 200:
            LOGGER.error('Error during VPN data retrieval.')
            LOGGER.debug(response.content)
            exit(3)

        if path:
            with path.open('wb') as file:
                file.write(response.content)
        else:
            stdout.buffer.write(response.content)


def main():
    """Main script."""

    args = get_args()
    basicConfig(format=LOG_FORMAT, level=DEBUG if args.debug else INFO)

    if args.user:
        user = args.user
    else:
        try:
            user = input('User name: ')
        except (EOFError, KeyboardInterrupt):
            print()
            LOGGER.error('Aborted by user.')
            exit(1)

    try:
        passwd = getpass('Password: ')
    except (EOFError, KeyboardInterrupt):
        print()
        LOGGER.error('Aborted by user.')
        exit(1)

    login_data = {'account': user, 'passwd': passwd}
    vpn_data = {'system': args.system, 'windows': args.windows}
    retrieve_data(login_data, vpn_data, args.file)


if __name__ == '__main__':
    main()
